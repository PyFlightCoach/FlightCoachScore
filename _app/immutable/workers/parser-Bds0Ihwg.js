(function(){"use strict";const d={0:"MANUAL",1:"CIRCLE",2:"STABILIZE",3:"TRAINING",4:"ACRO",5:"FBWA",6:"FBWB",7:"CRUISE",8:"AUTOTUNE",10:"AUTO",11:"RTL",12:"LOITER",13:"TAKEOFF",14:"AVOID_ADSB",15:"GUIDED",16:"INITIALISING",17:"QSTABILIZE",18:"QHOVER",19:"QLOITER",20:"QLAND",21:"QRTL",22:"QAUTOTUNE",23:"QACRO",24:"THERMAL"},y={0:"STABILIZE",1:"ACRO",2:"ALT_HOLD",3:"AUTO",4:"GUIDED",5:"LOITER",6:"RTL",7:"CIRCLE",9:"LAND",11:"DRIFT",13:"SPORT",14:"FLIP",15:"AUTOTUNE",16:"POSHOLD",17:"BRAKE",18:"THROW",19:"AVOID_ADSB",20:"GUIDED_NOGPS",21:"SMART_RTL",22:"FLOWHOLD",23:"FOLLOW",24:"ZIGZAG",25:"SYSTEMID",26:"AUTOROTATE"},I={0:"MANUAL",1:"ACRO",3:"STEERING",4:"HOLD",5:"LOITER",6:"FOLLOW",7:"SIMPLE",10:"AUTO",11:"RTL",12:"SMART_RTL",15:"GUIDED",16:"INITIALISING"},F={0:"MANUAL",1:"STOP",2:"SCAN",3:"SERVO_TEST",10:"AUTO",16:"INITIALISING"},E={0:"STABILIZE",1:"ACRO",2:"ALT_HOLD",3:"AUTO",4:"GUIDED",7:"CIRCLE",9:"SURFACE",16:"POSHOLD",19:"MANUAL",20:"MOTOR_DETECT"},S={"-":0,"?":1,2:100,1:10,0:1,A:.1,B:.01,C:.001,D:1e-4,E:1e-5,F:1e-6,G:1e-7,"!":3.6,"/":3600},R={1e-6:"n",1e3:"M",.001:"m"},L=163,U=149,N={"-":"","?":"UNKNOWN",A:"A",d:"°",b:"B",k:"°/s",D:"°",e:"°/s/s",E:"rad/s",G:"Gauss",h:"°",i:"A.s",J:"W.s",L:"rad/s/s",m:"m",n:"m/s",o:"m/s/s",O:"°C","%":"%",S:"satellites",s:"s",q:"rpm",r:"rad",U:"°",u:"ppm",v:"V",P:"Pa",w:"Ohm",Y:"us",z:"Hz","#":"instance"};function p(h){let t;return[2,4,13,14,3,15].includes(h)&&(t=y),h===1&&(t=d),h===10&&(t=I),h===5&&(t=F),h===12&&(t=E),t??null}Math.radians=function(h){return h*Math.PI/180},Math.degrees=function(h){return h*180/Math.PI};class P{constructor(t){this.buffer=null,this.data=null,this.FMT=[],this.FMT[128]={Type:"128",length:"89",Name:"FMT",Format:"BBnNZ",Columns:["Type","Length","Name","Format","Columns"]},this.offset=0,this.messages={},this.sent=!1,this.messageTypes={},this.send_postMessage=t??!1}get_type_array(t,e){switch(t){case"a":case"n":case"N":case"Z":return new Array(e);case"b":case"B":case"M":case"h":case"H":case"i":case"L":case"I":case"f":case"d":case"Q":case"q":case"c":case"C":case"E":case"e":return new Float64Array(e)}}parse_type(t){let e;switch(t){case"a":e=[];for(let i=0;i<32;i++)e[i]=this.data.getInt16(this.offset,!0),this.offset+=2;break;case"b":e=this.data.getInt8(this.offset),this.offset+=1;break;case"B":e=this.data.getUint8(this.offset),this.offset+=1;break;case"h":e=this.data.getInt16(this.offset,!0),this.offset+=2;break;case"H":e=this.data.getUint16(this.offset,!0),this.offset+=2;break;case"i":e=this.data.getInt32(this.offset,!0),this.offset+=4;break;case"I":e=this.data.getUint32(this.offset,!0),this.offset+=4;break;case"f":e=this.data.getFloat32(this.offset,!0),this.offset+=4;break;case"d":e=this.data.getFloat64(this.offset,!0),this.offset+=8;break;case"Q":{let i=this.data.getUint32(this.offset,!0);this.offset+=4,e=this.data.getUint32(this.offset,!0)*4294967296+i,i<0&&(e+=4294967296),this.offset+=4;break}case"q":{let i=this.data.getInt32(this.offset,!0);this.offset+=4,e=this.data.getInt32(this.offset,!0)*4294967296+i,i<0&&(e+=4294967296),this.offset+=4;break}case"n":e=String.fromCharCode.apply(null,new Uint8Array(this.buffer,this.offset,4)).replace(/\x00+$/g,""),this.offset+=4;break;case"N":e=String.fromCharCode.apply(null,new Uint8Array(this.buffer,this.offset,16)).replace(/\x00+$/g,""),this.offset+=16;break;case"Z":e=String.fromCharCode.apply(null,new Uint8Array(this.buffer,this.offset,64)).replace(/\x00+$/g,""),this.offset+=64;break;case"c":e=this.data.getInt16(this.offset,!0),this.offset+=2;break;case"C":e=this.data.getUint16(this.offset,!0),this.offset+=2;break;case"E":e=this.data.getUint32(this.offset,!0),this.offset+=4;break;case"e":e=this.data.getInt32(this.offset,!0),this.offset+=4;break;case"L":e=this.data.getInt32(this.offset,!0),this.offset+=4;break;case"M":e=this.data.getUint8(this.offset),this.offset+=1;break}return e}get_size_of(t){switch(t){case"b":case"B":case"M":return 1;case"h":case"H":case"c":case"C":return 2;case"i":case"I":case"f":case"n":case"E":case"e":case"L":return 4;case"d":case"Q":case"q":return 8;case"N":return 16;case"a":case"Z":return 64}}FORMAT_TO_STRUCT(t){const e={};for(let i=0;i<t.Format.length;i++)e[t.Columns[i]]=this.parse_type(t.Format.charAt(i));return e}getFMT(t){for(let e=0;e<this.FMT.length;e++)if(this.FMT[e]!=null&&this.FMT[e].Name==t)return this.FMT[e]}isTypedArray(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}getType(t){return this.isTypedArray(t)&&t.constructor.name}postData(t){t.dataType={};const e=[];for(const i of Object.keys(t.messageList))this.getType(t.messageList[i])&&e.push(t.messageList[i].buffer);self.postMessage(t,e)}get_instance(t,e,i){const s=this.getFMT(t);if(s==null||e&&!("InstancesOffsetArray"in s&&e in s.InstancesOffsetArray))return;const n=c=>{const o=c.length;if(o==0)return;const f=()=>{const T={},l=s.Format.length;for(let r=0;r<l;r++)T[s.Columns[r]]=this.get_type_array(s.Format.charAt(r),o);for(let r=0;r<o;r++){this.offset=c[r];for(let a=0;a<l;a++)T[s.Columns[a]][r]=this.parse_type(s.Format.charAt(a))}return T},g=()=>{const T=s.Columns.indexOf(i);if(T==-1)return;const l=s.FormatOffset[T],r=s.Format.charAt(T),a=this.get_type_array(r,o);for(let u=0;u<o;u++)this.offset=c[u]+l,a[u]=this.parse_type(r);return a};return i?g():f()};return e!=null?n(s.InstancesOffsetArray[e]):n(s.OffsetArray)}get(t,e){return this.get_instance(t,null,e)}parseAtOffset(t){const e=this.getFMT(t);if(e==null)return;const i=(n,c)=>{const o=c.length;if(o==0)return{};const f=n.Format,g=f.length;let T;const l={};for(let r=0;r<g;r++){const a=n.Columns[r];a=="TimeUS"?(T=r,l.time_boot_s=new Float64Array(o)):l[a]=this.get_type_array(f.charAt(r),o)}for(let r=0;r<o;r++){this.offset=c[r];for(let a=0;a<g;a++)if(a==T)l.time_boot_s[r]=e.multipliers[a]*this.parse_type(f.charAt(a));else{const u=n.Columns[a];l[u][r]=this.parse_type(f.charAt(a)),e.multipliers[a]&&(l[u][r]=l[u][r]*e.multipliers[a])}if(this.send_postMessage&&r%1e3===0){const a=100*r/o;self.postMessage({percentage:a})}}return l};if("InstancesOffsetArray"in e){for(const[n,c]of Object.entries(e.InstancesOffsetArray)){const o=t+"["+n+"]";this.messages[o]=i(e,c),this.send_postMessage&&this.postData({messageType:o,messageList:this.messages[o]})}this.send_postMessage&&self.postMessage({percentage:100});return}if(this.messages[t]=i(e,e.OffsetArray),e.Name==="MODE"){const n=this.messages[t].Mode.length;this.messages[t].asText=new Array(n);for(let c=0;c<n;c++)this.messages[t].asText[c]=this.getModeString(this.messages[t].Mode[c])}this.send_postMessage&&(t.indexOf("FMT")===-1&&this.postData({messageType:t,messageList:this.messages[t]}),self.postMessage({percentage:100}))}checkNumberOfInstances(t){if(t.units===void 0)return;const e=t.units.indexOf("instance");if(e==-1)return;const i=t.FormatOffset[e],s=t.Format.charAt(e),n=[];t.InstancesOffsetArray={};const c=t.OffsetArray.length;for(let o=0;o<c;o++){this.offset=t.OffsetArray[o]+i;const f=this.parse_type(s);t.InstancesOffsetArray[f]==null&&(t.InstancesOffsetArray[f]=[],n.push(f)),t.InstancesOffsetArray[f].push(t.OffsetArray[o])}return delete t.OffsetArray,n}DfReader(){let t=0,e=[];for(;this.offset<this.buffer.byteLength-3;){if(this.data.getUint8(this.offset)!==L||this.data.getUint8(this.offset+1)!==U){this.offset+=1;continue}this.offset+=2;const s=this.data.getUint8(this.offset);if(this.offset+=1,e[s]==null&&(e[s]=[]),e[s].push(this.offset),this.FMT[s]!=null)try{if(s===128){const n=this.FORMAT_TO_STRUCT(this.FMT[s]);let c=0,o=new Array(n.Format.length);for(let f=0;f<n.Format.length;f++)o[f]=c,c+=this.get_size_of(n.Format.charAt(f));this.FMT[n.Type]={Type:n.Type,length:n.Length,Name:n.Name,Format:n.Format,Columns:n.Columns.split(","),FormatOffset:o,Size:c}}else this.offset+=this.FMT[s].Size}catch{this.offset+=1}if(this.send_postMessage&&this.offset-t>5e4){const n=100*this.offset/this.buffer.byteLength;self.postMessage({percentage:n}),t=this.offset}}const i=this.FMT.length;for(let s=0;s<i;s++)if(this.FMT[s]!=null){if(e[s]==null){this.FMT[s].Total_Length=0,this.FMT[s].OffsetArray=[];continue}this.FMT[s].OffsetArray=e[s],this.FMT[s].OffsetArray[this.FMT[s].OffsetArray.length-1]+this.FMT[s].Size>this.buffer.byteLength&&this.FMT[s].OffsetArray.pop(),this.FMT[s].Total_Length=this.FMT[s].OffsetArray.length}this.send_postMessage&&(self.postMessage({percentage:100}),self.postMessage({messages:this.messages}),this.sent=!0)}getModeString(t){let e;const i=this.messages.MSG;if(i){for(const s in i.Message)if(i.Message.hasOwnProperty(s)){if(i.Message[s].toLowerCase().includes("arduplane"))return e=1,p(e)[t];if(i.Message[s].toLowerCase().includes("arducopter"))return e=2,p(e)[t];if(i.Message[s].toLowerCase().includes("ardusub"))return e=12,p(e)[t];if(i.Message[s].toLowerCase().includes("rover"))return e=10,p(e)[t];if(i.Message[s].toLowerCase().includes("tracker"))return e=5,p(e)[t]}}return console.log("defaulting to fixed wing"),p(1)[t]}concatTypedArrays(t,e){const i=new t.constructor(t.length+e.length);return i.set(t,0),i.set(e,t.length),i}createUint8ArrayFromString(t){const e=new Uint8Array(t.length);for(let i=0,s=t.length;i<s;i++)e[i]=t.charCodeAt(i);return e}processFiles(){if(this.files={},this.messages.FILE!==void 0){for(const t in this.messages.FILE.FileName)if(this.messages.FILE.FileName.hasOwnProperty(t)){const e=this.messages.FILE.FileName[t],i=this.messages.FILE.Data[t];this.files.hasOwnProperty(e)?this.files[e]=this.concatTypedArrays(this.files[e],this.createUint8ArrayFromString(i)):this.files[e]=this.createUint8ArrayFromString(i)}this.send_postMessage&&self.postMessage({files:this.files})}}populateUnits(){const t=this.get("FMTU");for(const e in t.FmtType){const i=t.FmtType[e];this.FMT[i].units=[];for(const s of t.UnitIds[e])this.FMT[i].units.push(N[s]);this.FMT[i].multipliers=[];for(const s of t.MultIds[e])this.FMT[i].multipliers.push(S[s])}}extractStartTime(){if(!("GPS"in this.messageTypes))return;let t;for(const a of this.FMT){let A=function(m){const O=m+M;(t==null||O<t)&&(t=O)};if(a==null)continue;const u=a.Columns.indexOf("TimeUS");if(u==-1||a.Format.charAt(u)!="Q")continue;const M=a.FormatOffset[u];if("InstancesOffsetArray"in a)for(const m of Object.values(a.InstancesOffsetArray))m.length>0&&A(m[0]);else a.OffsetArray.length>0&&A(a.OffsetArray[0])}let e;t!=null&&(this.offset=t,e=this.parse_type("Q"));function i(a,u,M,A){const O=a.length;for(let _=0;_<O;_++)if(u[_]>=3&&M[_]>1e3&&A[_]>0)return{TimeUS:a[_],weeks:M[_],ms:A[_]}}let s;function n(a){a!=null&&(s==null||a.TimeUS<s.TimeUS)&&(s=a)}if("instances"in this.messageTypes.GPS)for(const a of Object.keys(this.messageTypes.GPS.instances))n(i(this.get_instance("GPS",a,"TimeUS"),this.get_instance("GPS",a,"Status"),this.get_instance("GPS",a,"GWk"),this.get_instance("GPS",a,"GMS")));else n(i(this.get("GPS","TimeUS"),this.get("GPS","Status"),this.get("GPS","GWk"),this.get("GPS","GMS")));if(s==null)return;const c=7*24*60*60*1e3,o=s.weeks*c+s.ms,f=(s.TimeUS-e)*.001,T=315964800*1e3+o-f;let l=new Date(T);const r=this.leapSecondsGPS(l.getUTCFullYear(),l.getUTCMonth()+1);return new Date(l.getTime()-r*1e3)}leapSecondsGPS(t,e){return this.leapSecondsTAI(t,e)-19}leapSecondsTAI(t,e){const i=t*100+e;return i>=201701?37:i>=201507?36:i>=201207?35:i>=200901?34:i>=200601?33:i>=199901?32:i>=199707?31:i>=199601?30:0}processData(t,e){this.buffer=t,this.data=new DataView(this.buffer),this.DfReader();const i={};this.populateUnits();for(const s of this.FMT)if(s&&s.Total_Length!=0){const n=s.Columns,c={};for(let f=0;f<n.length;f++)c[n[f]]={name:n[f],units:s.units?(R[s.multipliers[f]]||"")+s.units[f]:"?",multiplier:s.units?s.multipliers[f]:1};i[s.Name]={expressions:n,units:s.units,multipliers:s.multipliers,complexFields:c};const o=this.checkNumberOfInstances(s);if(o!=null){i[s.Name].instances={};for(const f of o){const g=s.Name+"["+f+"]";i[s.Name].instances[f]=g,i[g]={expressions:n,units:s.units,multipliers:s.multipliers,complexFields:c}}}}this.send_postMessage&&self.postMessage({availableMessages:i}),this.messageTypes=i,e=[...new Set([...e||[],"MSG","ORGN","PARM","STAT"])];for(const s of e)this.parseAtOffset(s),s==="FILE"&&this.processFiles();if(this.send_postMessage){const s={bootTime:this.extractStartTime()};self.postMessage({metadata:s}),self.postMessage({messagesDoneLoading:!0})}return{types:this.messageTypes,messages:this.messages}}loadType(t){this.parseAtOffset(t),console.log("done")}stats(){let t={};for(const e of this.FMT)if(e){const i=e.Size+3,s=e.Total_Length,n=i*s;t[e.Name]={count:s,msg_size:i,size:n}}return t}}self.addEventListener("message",function(h){let t;h.data===null?console.log("got bad file message!"):h.data.action==="parse"?(t=new P(!0),t.processData(h.data.file,h.data.msgs)):h.data.action==="loadType"?t.loadType(h.data.type.split("[")[0]):h.data.action==="trimFile"&&t.trimFile(h.data.time)})})();
